version: '3.8'

services:
  caddy:
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
    networks:
      - prefect-network
    healthcheck:
      test: ["CMD", "caddy", "run", "--config", "/etc/caddy/Caddyfile", "--validate"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB_FILE: /run/secrets/postgres_db
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - prefect-network
    secrets:
      - postgres_db
      - postgres_user
      - postgres_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$(cat /run/secrets/postgres_user) -d $$(cat /run/secrets/postgres_db)"]
      interval: 10s
      timeout: 5s
      retries: 5

  prefect:
    build:
      context: ./prefect
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      PREFECT_API_DATABASE_CONNECTION_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PREFECT_API_URL: ${PREFECT_API_URL}
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_SERVER_API_PORT: 4200
      PREFECT_SERVER_AUTH_ENABLED: "true"
      PREFECT_SERVER_AUTH_TYPE: "key"
    networks:
      - prefect-network
    healthcheck:
      test: ["CMD", "prefect", "healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  caddy_data:

networks:
  prefect-network:
    name: prefect-network

secrets:
  postgres_db:
    file: ./secrets/postgres_db.txt
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt