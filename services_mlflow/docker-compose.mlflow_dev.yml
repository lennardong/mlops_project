name: service-mlflow-dev

services:

  mlflow-server:
    container_name: mlflow_server_dev
    build:
      context: ./mlflow
      dockerfile: mlflow_server.Dockerfile
    ports:
      - "5000:5000"
    environment:
      MLFLOW_TRACKING_URI: postgresql://mlflow:mlflowpassword@postgres:5432/mlflow
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflowpassword
      POSTGRES_DB: mlflow
      MLFLOW_ARTIFACT_ROOT: /mlflow/artifacts
      MLFLOW_SERVE_ARTIFACTS: "true"
      MLFLOW_SQLALCHEMY_DATABASE_URI: postgresql://mlflow:mlflowpassword@postgres:5432/mlflow
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - mlflow-network

  postgres:
    image: postgres:13
    container_name: mlflow_postgres_dev
    environment:
      POSTGRES_DB: mlflow
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflowpassword
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mlflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mlflow-network

  caddy:
    image: caddy:2
    ports:
      - "8081:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    depends_on:
      - mlflow-server
    networks:
      - mlflow-network

networks:
  mlflow-network:
    driver: bridge

volumes:
  postgres_data:
  mlflow_artifacts:
